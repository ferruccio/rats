use crate::CHAR_CELL_HEIGHT;

pub const MAZE_NONE: u8 = b' ';
pub const MAZE_ACROSS: u8 = MAZE_WALLS_START;
pub const MAZE_DOWN: u8 = MAZE_WALLS_START + 1;
pub const MAZE_TOP_LEFT: u8 = MAZE_WALLS_START + 2;
pub const MAZE_TOP_RIGHT: u8 = MAZE_WALLS_START + 3;
pub const MAZE_BOTTOM_LEFT: u8 = MAZE_WALLS_START + 4;
pub const MAZE_BOTTOM_RIGHT: u8 = MAZE_WALLS_START + 5;
pub const MAZE_LEFT_T: u8 = MAZE_WALLS_START + 6;
pub const MAZE_RIGHT_T: u8 = MAZE_WALLS_START + 7;
pub const MAZE_TOP_T: u8 = MAZE_WALLS_START + 8;
pub const MAZE_BOTTOM_T: u8 = MAZE_WALLS_START + 9;
pub const MAZE_CROSS: u8 = MAZE_WALLS_START + 10;
pub const MAZE_TOP: u8 = MAZE_WALLS_START + 11;
pub const MAZE_BOTTOM: u8 = MAZE_WALLS_START + 12;
pub const MAZE_LEFT: u8 = MAZE_WALLS_START + 13;
pub const MAZE_RIGHT: u8 = MAZE_WALLS_START + 14;

pub const MAZE_WALLS_START: u8 = 0x80;
pub const MAZE_WALLS_END: u8 = MAZE_RIGHT;
// comments on each line prevent rustfmt from changing this layout
pub const MAZE_WALLS: [u8; 15 * CHAR_CELL_HEIGHT] = [
    // across
    // 01234567
    0b_00000000, // 00
    0b_00000000, // 01
    0b_00000000, // 02
    0b_00000000, // 03
    0b_11111111, // 04
    0b_11111111, // 05
    0b_11111111, // 06
    0b_11111111, // 07
    0b_00000000, // 08
    0b_00000000, // 09
    0b_00000000, // 10
    0b_00000000, // 11
    // down
    // 01234567
    0b_00111100, // 00
    0b_00111100, // 01
    0b_00111100, // 02
    0b_00111100, // 03
    0b_00111100, // 04
    0b_00111100, // 05
    0b_00111100, // 06
    0b_00111100, // 07
    0b_00111100, // 08
    0b_00111100, // 09
    0b_00111100, // 10
    0b_00111100, // 11
    // top left corner
    // 01234567
    0b_00000000, // 00
    0b_00000000, // 01
    0b_00000000, // 02
    0b_00000000, // 03
    0b_00111111, // 04
    0b_00111111, // 05
    0b_00111111, // 06
    0b_00111111, // 07
    0b_00111100, // 08
    0b_00111100, // 09
    0b_00111100, // 10
    0b_00111100, // 11
    // top right corner
    // 01234567
    0b_00000000, // 00
    0b_00000000, // 01
    0b_00000000, // 02
    0b_00000000, // 03
    0b_11111100, // 04
    0b_11111100, // 05
    0b_11111100, // 06
    0b_11111100, // 07
    0b_00111100, // 08
    0b_00111100, // 09
    0b_00111100, // 10
    0b_00111100, // 11
    // bottom left corner
    // 01234567
    0b_00111100, // 00
    0b_00111100, // 01
    0b_00111100, // 02
    0b_00111100, // 03
    0b_11111100, // 04
    0b_11111100, // 05
    0b_11111100, // 06
    0b_11111100, // 07
    0b_00000000, // 08
    0b_00000000, // 09
    0b_00000000, // 10
    0b_00000000, // 11
    // bottom right corner
    // 01234567
    0b_00111100, // 00
    0b_00111100, // 01
    0b_00111100, // 02
    0b_00111100, // 03
    0b_00111111, // 04
    0b_00111111, // 05
    0b_00111111, // 06
    0b_00111111, // 07
    0b_00000000, // 08
    0b_00000000, // 09
    0b_00000000, // 10
    0b_00000000, // 11
    // left T
    // 01234567
    0b_00111100, // 00
    0b_00111100, // 01
    0b_00111100, // 02
    0b_00111100, // 03
    0b_00111111, // 04
    0b_00111111, // 05
    0b_00111111, // 06
    0b_00111111, // 07
    0b_00111100, // 08
    0b_00111100, // 09
    0b_00111100, // 10
    0b_00111100, // 11
    // right T
    // 01234567
    0b_00111100, // 00
    0b_00111100, // 01
    0b_00111100, // 02
    0b_00111100, // 03
    0b_11111100, // 04
    0b_11111100, // 05
    0b_11111100, // 06
    0b_11111100, // 07
    0b_00111100, // 08
    0b_00111100, // 09
    0b_00111100, // 10
    0b_00111100, // 11
    // top T
    // 01234567
    0b_00000000, // 00
    0b_00000000, // 01
    0b_00000000, // 02
    0b_00000000, // 03
    0b_11111111, // 04
    0b_11111111, // 05
    0b_11111111, // 06
    0b_11111111, // 07
    0b_00111100, // 08
    0b_00111100, // 09
    0b_00111100, // 10
    0b_00111100, // 11
    // bottom T
    // 01234567
    0b_00111100, // 00
    0b_00111100, // 01
    0b_00111100, // 02
    0b_00111100, // 03
    0b_11111111, // 04
    0b_11111111, // 05
    0b_11111111, // 06
    0b_11111111, // 07
    0b_00000000, // 08
    0b_00000000, // 09
    0b_00000000, // 10
    0b_00000000, // 11
    // cross
    // 01234567
    0b_00111100, // 00
    0b_00111100, // 01
    0b_00111100, // 02
    0b_00111100, // 03
    0b_11111111, // 04
    0b_11111111, // 05
    0b_11111111, // 06
    0b_11111111, // 07
    0b_00111100, // 08
    0b_00111100, // 09
    0b_00111100, // 10
    0b_00111100, // 11
    // top endcap
    // 01234567
    0b_00111100, // 00
    0b_00111100, // 01
    0b_00111100, // 02
    0b_00111100, // 03
    0b_00111100, // 04
    0b_00111100, // 05
    0b_00000000, // 06
    0b_00000000, // 07
    0b_00000000, // 08
    0b_00000000, // 09
    0b_00000000, // 10
    0b_00000000, // 11
    // bottom endcap
    // 01234567
    0b_00000000, // 00
    0b_00000000, // 01
    0b_00000000, // 02
    0b_00000000, // 03
    0b_00000000, // 04
    0b_00000000, // 05
    0b_00111100, // 06
    0b_00111100, // 07
    0b_00111100, // 08
    0b_00111100, // 09
    0b_00111100, // 10
    0b_00111100, // 11
    // left endcap
    // 01234567
    0b_00000000, // 00
    0b_00000000, // 01
    0b_00000000, // 02
    0b_00000000, // 03
    0b_11110000, // 04
    0b_11110000, // 05
    0b_11110000, // 06
    0b_11110000, // 07
    0b_00000000, // 08
    0b_00000000, // 09
    0b_00000000, // 10
    0b_00000000, // 11
    // right endcap
    // 01234567
    0b_00000000, // 00
    0b_00000000, // 01
    0b_00000000, // 02
    0b_00000000, // 03
    0b_00001111, // 04
    0b_00001111, // 05
    0b_00001111, // 06
    0b_00001111, // 07
    0b_00000000, // 08
    0b_00000000, // 09
    0b_00000000, // 10
    0b_00000000, // 11
];
